name: Deploy One-L Tool to AWS Dev Env

on:
  push:
    branches:
      - dev  

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: dev

    steps:
    # Step 1: Check out the repository's code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Node.js with the version required by your project
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # Use Node.js version 20.x, which is compatible with "@types/node": "20.12.7"

    # Step 3: Install frontend dependencies (in 'one_l/user_interface')
    - name: Install frontend dependencies
      run: |
        cd one_l/user_interface
        npm install

    # Step 4: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 5: Verify AWS credentials and environment
    - name: Verify AWS credentials
      run: |
        echo "Checking AWS credentials..."
        aws sts get-caller-identity
        echo "AWS region: $AWS_DEFAULT_REGION"
        echo "Environment: $ENVIRONMENT"
    # Step 6: Bootstrap the AWS environment (from the root folder)
    - name: Bootstrap AWS environment
      run: npx cdk bootstrap

    # Step 7: Deploy the CDK stack (from the root folder)
    - name: Deploy CDK stack
      run: npx cdk deploy OneLStackDev --require-approval never
      env:
        ENVIRONMENT: dev

    # Step 8: Fetch CloudFormation outputs and save to a file
    - name: Fetch CloudFormation Outputs
      run: |
        aws cloudformation describe-stacks --stack-name OneLStackDev --query "Stacks[0].Outputs" > stack-outputs.json
        cat stack-outputs.json  # Just to verify in logs if needed

    # Step 9: Upload the output file as an artifact (optional)
    - name: Upload Outputs as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: stack-outputs
        path: stack-outputs.json