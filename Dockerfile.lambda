# Dockerfile for building AWS Lambda deployment packages
# Uses the exact same base image as Lambda runtime for perfect compatibility

FROM public.ecr.aws/lambda/python:3.12

# Install system dependencies needed for lxml and other native packages
RUN dnf update -y && \
    dnf install -y \
        gcc \
        gcc-c++ \
        libxml2-devel \
        libxslt-devel \
        python3-devel \
        zip \
    && dnf clean all

# Set working directory
WORKDIR /build

# Copy requirements file first for better layer caching
COPY one_l/agent_api/functions/agent/document_review/requirements.txt .

# Install Python dependencies in a Lambda-compatible way
# The Lambda base image is already x86_64, so we don't need to force platform
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --only-binary=all -r requirements.txt -t ./python/

# Copy the Lambda function code
COPY one_l/agent_api/functions/agent/document_review/lambda_function.py ./python/

# Copy the agent modules that the Lambda function imports
COPY one_l/agent_api/agent ./python/agent_api/agent/

# Ensure proper permissions
RUN find ./python -type f -exec chmod 644 {} \; && \
    find ./python -type d -exec chmod 755 {} \;

# Create the deployment package
RUN cd python && \
    zip -r ../lambda-deployment.zip . \
        -x "*.pyc" \
        -x "*/__pycache__/*" \
        -x "*/.DS_Store" \
        -x "*/test*"

# Output the package - use entrypoint override
ENTRYPOINT []
CMD ["cp", "/build/lambda-deployment.zip", "/output/"] 